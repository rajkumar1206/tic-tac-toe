{"version":3,"sources":["ttt.js","App.js","serviceWorker.js","index.js"],"names":["TTT","state","board","turn","win","xwins","owins","disable","xoturn","plot","e","n","parseInt","target","id","b","setState","handleWin","i","sum1","sum2","sum3","sum4","j","console","log","setTimeout","t","reset","className","this","onClick","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.143dc1fa.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class TTT extends Component {\r\n    state = {\r\n        board : [\r\n            [null, null, null],\r\n            [null, null, null],\r\n            [null, null, null]\r\n        ],\r\n        turn: 1,\r\n        win: null,\r\n        xwins: 0,\r\n        owins: 0,\r\n        disable: false,\r\n        xoturn: 1\r\n    }\r\n\r\n    plot = (e) => {\r\n        if(!this.state.disable){\r\n            let n = parseInt(e.target.id);\r\n            let b = this.state.board;\r\n            if(b[parseInt(n/3)][parseInt(n%3)] === null){\r\n                if (this.state.turn %2 === 0)\r\n                    b[parseInt(n/3)][parseInt(n%3)] = 'x';\r\n                else\r\n                    b[parseInt(n/3)][parseInt(n%3)] = 'o';\r\n\r\n                let turn = this.state.turn+1;\r\n                this.setState({\r\n                    board: b,\r\n                    turn\r\n                });\r\n                this.handleWin();\r\n            }\r\n        }\r\n    }\r\n\r\n    handleWin = () => {\r\n        let b = this.state.board;\r\n        let win = null;\r\n        for( let i = 0; i< 3;i++){\r\n            let sum1 =0, sum2 =0, sum3 =0, sum4 = 0;\r\n            for(let j = 0 ; j < 3 ; j++){\r\n                if(b[i][j] === 'x')\r\n                    sum1++;\r\n                if(b[j][i] === 'x')\r\n                    sum2++;\r\n                if(b[i][j] === 'o')\r\n                    sum3++;\r\n                if(b[j][i] === 'o')\r\n                    sum4++;\r\n            }\r\n            if ( sum1 === 3 || sum2 === 3)\r\n                win = 'x';\r\n            if ( sum3 === 3 || sum4 === 3)\r\n                win = 'o';\r\n        }\r\n        if ( win !== 'o' || win !== 'x'){\r\n            console.log(\"test\");\r\n            let sum1 = 0, sum2 = 0, sum3 = 0, sum4 = 0;\r\n            for ( let i = 0; i<3;i++){\r\n                if(b[i][i] === 'x')\r\n                    sum1++;\r\n                if(b[i][i] === 'o')\r\n                    sum2++;\r\n                if(b[i][2-i] === 'x')\r\n                    sum3++;\r\n                if(b[i][2-i] === 'o')\r\n                    sum4++;\r\n            }\r\n            if ( sum1 === 3 || sum2 === 3)\r\n                win = 'x';\r\n            if ( sum3 === 3 || sum4 === 3)\r\n                win = 'o';\r\n\r\n        }\r\n\r\n        if(win === 'x'){\r\n            this.setState({\r\n                disable: true\r\n            });\r\n            let xwins = this.state.xwins+1;\r\n            this.setState({\r\n                xwins\r\n            })\r\n            setTimeout(()=>{\r\n                let t = this.state.xoturn+1;\r\n                this.setState({\r\n                    xoturn: t\r\n                })\r\n                this.reset();\r\n                this.setState({\r\n                    disable: false\r\n                });\r\n            }, 3000)\r\n        }\r\n        if(win === 'o'){\r\n            this.setState({\r\n                disable: true\r\n            });\r\n            let owins = this.state.owins+1;\r\n            this.setState({\r\n                owins\r\n            })\r\n            \r\n            setTimeout(()=>{\r\n                let t = this.state.xoturn+1;\r\n                this.setState({\r\n                    xoturn: t\r\n                })\r\n                this.reset();\r\n                this.setState({\r\n                    disable: false\r\n                });\r\n                \r\n            }, 3000)\r\n        }\r\n        this.setState({\r\n            win\r\n        })\r\n        \r\n    }\r\n\r\n    reset = (e) => {\r\n        let board = [\r\n            [null, null, null],\r\n            [null, null, null],\r\n            [null, null, null]\r\n        ];\r\n        let t = this.state.xoturn;\r\n        this.setState({\r\n            turn: t,\r\n            win: null,\r\n            board\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"container section\">\r\n                    <h4 className=\"indigo-text text-darken-3 center-align\">Welcome to Tic Tac Toe</h4>\r\n                    {\r\n                        (this.state.win)?(\r\n                                <div>\r\n                                    <h4 className=\"center-align green-text\">{ this.state.win } won the match</h4>\r\n                                    <p className=\"center-align green-text darken-4\">(Match restart automatically in 3sec :))</p>\r\n                                </div>\r\n                        ): null\r\n                    }\r\n                    <div className=\"row\">\r\n                        <div className=\"col s6\">\r\n                            <h5 className=\"indigo-text right\">X-Won: {this.state.xwins} </h5>\r\n                        </div>\r\n                        <div className=\"col s6\">\r\n                            <h5 className=\"indigo-text left\">O-Won: {this.state.owins} </h5>\r\n                        </div>\r\n                    </div>\r\n                    <h6 className=\"indigo-text center-align\">{ this.state.xoturn % 2 == 0 ? 'X' : 'O' } turn</h6>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td id=\"0\" onClick={this.plot}>{this.state.board[0][0]}</td>\r\n                                <td className=\"vert\"id=\"1\" onClick={this.plot}>{this.state.board[0][1]}</td>\r\n                                <td id=\"2\" onClick={this.plot}>{this.state.board[0][2]}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td id=\"3\" onClick={this.plot}>{this.state.board[1][0]}</td>\r\n                                <td className=\"vert\" id=\"4\" onClick={this.plot}>{this.state.board[1][1]}</td>\r\n                                <td id=\"5\" onClick={this.plot}>{this.state.board[1][2]}</td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td id=\"6\" onClick={this.plot}>{this.state.board[2][0]}</td>\r\n                                <td className=\"vert\"id=\"7\" onClick={this.plot}>{this.state.board[2][1]}</td>\r\n                                <td id=\"8\" onClick={this.plot}>{this.state.board[2][2]}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                        \r\n                    </table>\r\n                    <div className=\"center-align padd\">\r\n                        <button className=\"btn red\" onClick={this.reset}>Reset</button>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport TTT from './ttt'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TTT />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}